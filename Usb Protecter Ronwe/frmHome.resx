<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lwAAAABJRU5ErkJggg==
</value>
  </data>
</root>